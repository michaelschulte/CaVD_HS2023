quarters_map %>%
ggplot() +
geom_sf(aes(fill = income_mean),
col = "white") +
theme_void() +
scale_fill_viridis_c(name = 'Income',option = "E") +
ggtitle(label = "Inequality in Basel",
subtitle = "Average income in Basel's quarters in {closest_state}") +
labs(caption = "Source: Open Data Basel Stadt")
quarters_map %>%
ggplot() +
geom_sf(aes(fill = income_mean),
col = "white") +
theme_void() +
scale_fill_viridis_c(name = 'Income',option = "E") +
ggtitle(label = "Inequality in Basel",
subtitle = "Average income in Basel's quarters in {closest_state}") +
labs(caption = "Source: Open Data Basel Stadt") +
transition_states(year
)
quarters$year
quarters_map$year
install.packages(c("apa", "brms", "coin", "curl", "dbplyr", "DEoptimR", "DT", "evaluate", "fansi", "gert", "ggplot2", "ggrepel", "graphlayouts", "gt", "htmltools", "insight", "JWileymisc", "lattice", "learnr", "libcoin", "lubridate", "magick", "markdown", "openssl", "papaja", "pkgload", "plyr", "polyclip", "prettyunits", "psych", "ragg", "raster", "reactR", "reticulate", "rpart", "rstan", "shiny", "sodium", "sp", "svglite", "systemfonts", "targets", "terra", "testthat", "textshaping", "tinytex", "V8", "vctrs", "vroom", "withr", "yulab.utils"))
install.packages(c("apa", "brms", "coin", "curl", "dbplyr", "DEoptimR", "DT", "evaluate", "fansi", "gert", "ggplot2", "ggrepel", "graphlayouts", "gt", "htmltools", "insight", "JWileymisc", "lattice", "learnr", "libcoin", "lubridate", "magick", "markdown", "openssl", "papaja", "pkgload", "plyr", "polyclip", "prettyunits", "psych", "ragg", "raster", "reactR", "reticulate", "rpart", "rstan", "shiny", "sodium", "sp", "svglite", "systemfonts", "targets", "terra", "testthat", "textshaping", "tinytex", "V8", "vctrs", "vroom", "withr", "yulab.utils"))
install.packages(c("apa", "brms", "coin", "curl", "dbplyr", "DEoptimR", "DT", "evaluate", "fansi", "gert", "ggplot2", "ggrepel", "graphlayouts", "gt", "htmltools", "insight", "JWileymisc", "lattice", "learnr", "libcoin", "lubridate", "magick", "markdown", "openssl", "papaja", "pkgload", "plyr", "polyclip", "prettyunits", "psych", "ragg", "raster", "reactR", "reticulate", "rpart", "rstan", "shiny", "sodium", "sp", "svglite", "systemfonts", "targets", "terra", "testthat", "textshaping", "tinytex", "V8", "vctrs", "vroom", "withr", "yulab.utils"))
options(htmltools.dir.version = FALSE)
# see: https://github.com/yihui/xaringan
# install.packages("xaringan")
# see:
# https://github.com/yihui/xaringan/wiki
# https://github.com/gnab/remark/wiki/Markdown
options(width=110)
options(digits = 4)
knitr::opts_chunk$set(comment=NA, fig.width=6, fig.height=6, echo = TRUE, eval = TRUE,
message = FALSE, warning = FALSE, fig.align = 'center', dpi = 200)
library(tidyverse)
library(ggthemes)
library(sf)
require(tidygraph)
require(ggraph)
require(gganimate)
require(plotly)
basel = read_csv('1_Data/taxation.csv')
basel_map = sf::read_sf('1_Data/quarters')
quarters_map <- basel_map %>%
left_join(basel,by = c("TYPE" = "quarter"))
p = quarters_map %>%
ggplot() +
geom_sf(aes(fill = income_mean),
col = "white") +
theme_void() +
scale_fill_viridis_c(name = 'Income',option = "E") +
ggtitle(label = "Inequality in Basel",
subtitle = "Average income in Basel's quarters in {closest_state}") +
labs(caption = "Source: Open Data Basel Stadt") +
transition_states(year,
transition_length = 10,
state_length = 0)
animate(p, 100)
?transition_states
ggplot(iris, aes(Sepal.Width, Petal.Width)) +
geom_point() +
labs(title = "{closest_state}") +
transition_states(Species, transition_length = 3, state_length = 1)
quarters_map %>%
ggplot() +
geom_sf(aes(fill = income_mean),
col = "white") +
theme_void() +
scale_fill_viridis_c(name = 'Income',option = "E") +
ggtitle(label = "Inequality in Basel",
subtitle = "Average income in Basel's quarters in {closest_state}") +
labs(caption = "Source: Open Data Basel Stadt") +
transition_states(year,
transition_length = 10,
state_length = 0)
?coord_sf
quarters_map %>%
ggplot() +
geom_sf(aes(fill = income_mean),
col = "white") +
theme_void() +
scale_fill_viridis_c(name = 'Income',option = "E") +
ggtitle(label = "Inequality in Basel",
subtitle = "Average income in Basel's quarters in {closest_state}") +
labs(caption = "Source: Open Data Basel Stadt")
quarters_map %>%
ggplot() +
geom_sf(aes(fill = income_mean),
col = "white") +
theme_void() +
scale_fill_viridis_c(name = 'Income',option = "E") +
ggtitle(label = "Inequality in Basel",
subtitle = "Average income in Basel's quarters in {closest_state}") +
labs(caption = "Source: Open Data Basel Stadt") +
coord_sf(crs = st_crs(quarters_map), year = NA)
quarters_map %>%
ggplot() +
geom_sf(aes(fill = income_mean),
col = "white") +
theme_void() +
scale_fill_viridis_c(name = 'Income',option = "E") +
ggtitle(label = "Inequality in Basel",
subtitle = "Average income in Basel's quarters in {closest_state}") +
labs(caption = "Source: Open Data Basel Stadt") +
coord_sf(crs = st_crs(quarters_map))
quarters_map %>%
ggplot() +
geom_sf(aes(fill = income_mean),
col = "white") +
theme_void() +
scale_fill_viridis_c(name = 'Income',option = "E") +
ggtitle(label = "Inequality in Basel",
subtitle = "Average income in Basel's quarters in {closest_state}") +
labs(caption = "Source: Open Data Basel Stadt") +
coord_sf(crs = st_crs(quarters_map)) +
transition_states(year,
transition_length = 10,
state_length = 0)
quarters_map %>%
ggplot() +
geom_sf(aes(fill = income_mean),
col = "white") +
theme_void() +
scale_fill_viridis_c(name = 'Income',option = "E") +
ggtitle(label = "Inequality in Basel",
subtitle = "Average income in Basel's quarters in {closest_state}") +
labs(caption = "Source: Open Data Basel Stadt") +
coord_sf(crs = st_crs(quarters_map)) +
transition_states(year,
transition_length = 17,
state_length = 0)
?transition_states
p = quarters_map %>%
ggplot() +
geom_sf(aes(fill = income_mean),
col = "white") +
theme_void() +
scale_fill_viridis_c(name = 'Income',option = "E") +
ggtitle(label = "Inequality in Basel",
subtitle = "Average income in Basel's quarters in {closest_state}") +
labs(caption = "Source: Open Data Basel Stadt") +
coord_sf(crs = st_crs(quarters_map)) +
transition_states(year,
transition_length = 1,
state_length = 0)
quarters_map %>%
ggplot() +
geom_sf(aes(fill = income_mean),
col = "white") +
theme_void() +
scale_fill_viridis_c(name = 'Income',option = "E") +
ggtitle(label = "Inequality in Basel",
subtitle = "Average income in Basel's quarters in {closest_state}") +
labs(caption = "Source: Open Data Basel Stadt") +
coord_sf(crs = st_crs(quarters_map)) +
transition_states(year,
transition_length = 1,
state_length = 0)
p = quarters_map %>%
ggplot() +
geom_sf(aes(fill = income_mean),
col = "white") +
theme_void() +
scale_fill_viridis_c(name = 'Income',option = "E") +
ggtitle(label = "Inequality in Basel",
subtitle = "Average income in Basel's quarters in {closest_state}") +
labs(caption = "Source: Open Data Basel Stadt") +
coord_sf(crs = st_crs(quarters_map)) +
transition_states(year,
transition_length = 1,
state_length = 0)
animate(p, 100)
quarters_map %>%
ggplot() +
geom_sf(aes(fill = income_mean),
col = "white") +
theme_void() +
scale_fill_viridis_c(name = 'Income',option = "E") +
ggtitle(label = "Inequality in Basel",
subtitle = "Average income in Basel's quarters in {closest_state}") +
labs(caption = "Source: Open Data Basel Stadt") +
coord_sf(crs = st_crs(quarters_map)) +
transition_states(year,
transition_length = 1,
state_length = 0)
quarters_map %>%
ggplot() +
geom_sf(aes(fill = income_mean),
col = "white") +
theme_void() +
scale_fill_viridis_c(name = 'Income',option = "E") +
ggtitle(label = "Inequality in Basel",
subtitle = "Average income in Basel's quarters in {closest_state}") +
labs(caption = "Source: Open Data Basel Stadt") +
coord_sf(crs = st_crs(quarters_map)) +
transition_states(
states = year,
transition_length = 1,
state_length = 0)
quarters_map %>%
ggplot() +
geom_sf(aes(fill = income_mean),
col = "white") +
theme_void() +
scale_fill_viridis_c(name = 'Income',option = "E") +
ggtitle(label = "Inequality in Basel",
subtitle = "Average income in Basel's quarters in {closest_state}") +
labs(caption = "Source: Open Data Basel Stadt") +
transition_states(
states = year,
transition_length = 1,
state_length = 0)
isntall.packages('gganimate')
install.packages('gganimate')
install.packages("gganimate")
install.packages('gganimate')
options(htmltools.dir.version = FALSE)
# see: https://github.com/yihui/xaringan
# install.packages("xaringan")
# see:
# https://github.com/yihui/xaringan/wiki
# https://github.com/gnab/remark/wiki/Markdown
options(width=110)
options(digits = 4)
knitr::opts_chunk$set(comment=NA, fig.width=6, fig.height=6, echo = TRUE, eval = TRUE,
message = FALSE, warning = FALSE, fig.align = 'center', dpi = 200)
library(tidyverse)
library(ggthemes)
library(sf)
require(tidygraph)
require(ggraph)
require(gganimate)
require(plotly)
basel = read_csv('1_Data/taxation.csv')
basel_map = sf::read_sf('1_Data/quarters')
quarters_map <- basel_map %>%
left_join(basel,by = c("TYPE" = "quarter"))
p = quarters_map %>%
ggplot() +
geom_sf(aes(fill = income_mean),
col = "white") +
theme_void() +
scale_fill_viridis_c(name = 'Income',option = "E") +
ggtitle(label = "Inequality in Basel",
subtitle = "Average income in Basel's quarters in {closest_state}") +
labs(caption = "Source: Open Data Basel Stadt") +
transition_states(
states = year,
transition_length = 1,
state_length = 0)
animate(p, 100)
quarters_map <- basel_map %>%
left_join(basel,by = c("TYPE" = "quarter"))
p = quarters_map %>%
ggplot() +
geom_sf(aes(fill = income_mean),
col = "white") +
theme_void() +
scale_fill_viridis_c(name = 'Income',option = "E") +
transition_states(year)
animate(p, 100)
# map code
quarters_map %>%
ggplot() +
geom_sf(aes(fill = income_mean),
col = "white") +
theme_void() +
scale_fill_viridis_c(name = 'Income',
option = "E") +
# add transitions
transition_states(year)
# map code
p = quarters_map %>%
ggplot() +
geom_sf(aes(fill = income_mean),
col = "white") +
theme_void() +
scale_fill_viridis_c(name = 'Income',
option = "E") +
# add transitions
transition_states(year)
animate(p, 100)
# map code
quarters_map %>%
ggplot(...) +
# add transitions
transition_states(year) +
# add labels
ggtitle(label = "Inequality in Basel",
subtitle = "... in {closest_state}") +
# map code
p = quarters_map %>%
ggplot() +
geom_sf(aes(fill = income_mean),
col = "white") +
theme_void() +
scale_fill_viridis_c(name = 'Income',
option = "E") +
# add transitions
transition_states(year) +
ggtitle(label = "Inequality in Basel",
subtitle = "Average income in Basel's quarters in {closest_state}")
# map code
p = quarters_map %>%
ggplot() +
geom_sf(aes(fill = income_mean),
col = "white") +
theme_void() +
scale_fill_viridis_c(name = 'Income',
option = "E") +
# add transitions
transition_states(year) +
ggtitle(label = "Inequality in Basel",
subtitle = "Average income in Basel's quarters in {closest_state}")
animate(p, 100)
ggplot(iris, aes(Sepal.Width, Petal.Width)) +
geom_point() +
labs(title = "{closest_state}") +
transition_states(Species, transition_length = 3, state_length = 1)
iris
knitr::opts_chunk$set(comment=NA, fig.width=6, fig.height=6, echo = TRUE, eval = TRUE,
message = FALSE, warning = FALSE, fig.align = 'center', dpi = 200)
library(tidyverse)
library(ggthemes)
library(sf)
require(tidygraph)
require(ggraph)
require(gganimate)
require(plotly)
basel = read_csv('1_Data/taxation.csv')
basel_map = sf::read_sf('1_Data/quarters')
basel_map %>%
left_join(basel,by = c("TYPE" = "quarter"))
quarters_map <- basel_map %>%
left_join(basel,by = c("TYPE" = "quarter"))
View(quarters_map)
quarters_map <- basel_map %>%
left_join(basel,by = c("TYPE" = "quarter"))
p = quarters_map %>%
ggplot() +
geom_sf(aes(fill = income_mean),
col = "white") +
theme_void() +
scale_fill_viridis_c(name = 'Income',option = "E") +
ggtitle(label = "Inequality in Basel",
subtitle = "Average income in Basel's quarters in {closest_state}") +
labs(caption = "Source: Open Data Basel Stadt") +
transition_states(
states = year,
transition_length = 1,
state_length = 0)
animate(p, 100)
quarters_map
quarters_map
quarters_map <- basel_map %>%
left_join(basel,by = c("TYPE" = "quarter"))
p = quarters_map %>%
ggplot() +
geom_sf(aes(fill = income_mean),
col = "white") +
theme_void() +
scale_fill_viridis_c(name = 'Income',option = "E") +
ggtitle(label = "Inequality in Basel",
subtitle = "Average income in Basel's quarters in {closest_state}") +
labs(caption = "Source: Open Data Basel Stadt") +
transition_states(
states = year,
transition_length = 17,
state_length = 0)
animate(p, 100)
quarters_map %>%
ggplot() +
geom_sf(aes(fill = income_mean),
col = "white") +
theme_void() +
scale_fill_viridis_c(name = 'Income',option = "E") +
ggtitle(label = "Inequality in Basel",
subtitle = "Average income in Basel's quarters in {closest_state}") +
labs(caption = "Source: Open Data Basel Stadt")
quarters_map <- basel_map %>%
left_join(basel,by = c("TYPE" = "quarter"))
p = quarters_map %>%
ggplot() +
geom_sf(aes(fill = income_mean),
col = "white") +
theme_void() +
scale_fill_viridis_c(name = 'Income',option = "E") +
ggtitle(label = "Inequality in Basel",
subtitle = "Average income in Basel's quarters in {closest_state}") +
labs(caption = "Source: Open Data Basel Stadt") +
transition_states(
states = TYPE,
transition_length = 10,
state_length = 0)
animate(p, 100)
quarters_map %>%
ggplot() +
geom_sf(aes(fill = income_mean),
col = "white") +
theme_void() +
scale_fill_viridis_c(name = 'Income',option = "E") +
ggtitle(label = "Inequality in Basel",
subtitle = "Average income in Basel's quarters in {closest_state}") +
labs(caption = "Source: Open Data Basel Stadt") +
transition_states(
states = TYPE,
transition_length = 10,
state_length = 0)
quarters_map %>%
ggplot() +
geom_sf(aes(fill = income_mean),
col = "white") +
theme_void() +
scale_fill_viridis_c(name = 'Income',option = "E") +
ggtitle(label = "Inequality in Basel",
subtitle = "Average income in Basel's quarters in {closest_state}") +
labs(caption = "Source: Open Data Basel Stadt") +
transition_states(
states = year,
transition_length = 10,
state_length = 0)
?coord_sf
quarters_map <- basel_map %>%
left_join(basel,by = c("TYPE" = "quarter"))
p = quarters_map %>%
ggplot() +
geom_sf(aes(fill = income_mean),
col = "white") +
theme_void() +
scale_fill_viridis_c(name = 'Income',option = "E") +
ggtitle(label = "Inequality in Basel",
subtitle = "Average income in Basel's quarters in {closest_state}") +
labs(caption = "Source: Open Data Basel Stadt") +
transition_states(
states = year,
transition_length = 10,
state_length = 0)
animate(p, 100)
remove.packages("transformr")
install.packages("https://cran.r-project.org/src/contrib/Archive/transformr/transformr_0.1.3.tar.gz", repos = NULL, type = "source")
quarters_map <- basel_map %>%
left_join(basel,by = c("TYPE" = "quarter"))
p = quarters_map %>%
ggplot() +
geom_sf(aes(fill = income_mean),
col = "white") +
theme_void() +
scale_fill_viridis_c(name = 'Income',option = "E") +
ggtitle(label = "Inequality in Basel",
subtitle = "Average income in Basel's quarters in {closest_state}") +
labs(caption = "Source: Open Data Basel Stadt") +
transition_states(
states = year,
transition_length = 10,
state_length = 0)
animate(p, 100)
remove.packages("gganimate")
install.packages("https://cran.r-project.org/src/contrib/Archive/gganimate/gganimate_1.0.7.tar.gz", repos = NULL, type = "source")
quarters_map <- basel_map %>%
left_join(basel,by = c("TYPE" = "quarter"))
p = quarters_map %>%
ggplot() +
geom_sf(aes(fill = income_mean),
col = "white") +
theme_void() +
scale_fill_viridis_c(name = 'Income',option = "E") +
ggtitle(label = "Inequality in Basel",
subtitle = "Average income in Basel's quarters in {closest_state}") +
labs(caption = "Source: Open Data Basel Stadt") +
transition_states(
states = year,
transition_length = 10,
state_length = 0)
animate(p, 100)
# Chunk 1: setup
options(htmltools.dir.version = FALSE)
# see: https://github.com/yihui/xaringan
# install.packages("xaringan")
# see:
# https://github.com/yihui/xaringan/wiki
# https://github.com/gnab/remark/wiki/Markdown
options(width=110)
options(digits = 4)
# Chunk 2
knitr::opts_chunk$set(comment=NA, fig.width=6, fig.height=6, echo = TRUE, eval = TRUE,
message = FALSE, warning = FALSE, fig.align = 'center', dpi = 200)
library(tidyverse)
library(ggthemes)
library(sf)
require(tidygraph)
require(ggraph)
require(gganimate)
require(plotly)
basel = read_csv('1_Data/taxation.csv')
basel_map = sf::read_sf('1_Data/quarters')
quarters_map <- basel_map %>%
left_join(basel,by = c("TYPE" = "quarter"))
p = quarters_map %>%
ggplot() +
geom_sf(aes(fill = income_mean),
col = "white") +
theme_void() +
scale_fill_viridis_c(name = 'Income',option = "E") +
ggtitle(label = "Inequality in Basel",
subtitle = "Average income in Basel's quarters in {closest_state}") +
labs(caption = "Source: Open Data Basel Stadt") +
transition_states(
states = year,
transition_length = 10,
state_length = 0)
animate(p, 100)
